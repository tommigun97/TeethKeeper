#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TeethKeeper
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataBase")]
	public partial class DataClassesDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertFARMACO(FARMACO instance);
    partial void UpdateFARMACO(FARMACO instance);
    partial void DeleteFARMACO(FARMACO instance);
    partial void InsertAFFIL_SEPARAZ(AFFIL_SEPARAZ instance);
    partial void UpdateAFFIL_SEPARAZ(AFFIL_SEPARAZ instance);
    partial void DeleteAFFIL_SEPARAZ(AFFIL_SEPARAZ instance);
    partial void InsertAPPUNTAMENTO(APPUNTAMENTO instance);
    partial void UpdateAPPUNTAMENTO(APPUNTAMENTO instance);
    partial void DeleteAPPUNTAMENTO(APPUNTAMENTO instance);
    partial void InsertASSUNZIONE_FARMACO(ASSUNZIONE_FARMACO instance);
    partial void UpdateASSUNZIONE_FARMACO(ASSUNZIONE_FARMACO instance);
    partial void DeleteASSUNZIONE_FARMACO(ASSUNZIONE_FARMACO instance);
    partial void InsertATTREZZATURA(ATTREZZATURA instance);
    partial void UpdateATTREZZATURA(ATTREZZATURA instance);
    partial void DeleteATTREZZATURA(ATTREZZATURA instance);
    partial void InsertESAME(ESAME instance);
    partial void UpdateESAME(ESAME instance);
    partial void DeleteESAME(ESAME instance);
    partial void InsertESAURITA(ESAURITA instance);
    partial void UpdateESAURITA(ESAURITA instance);
    partial void DeleteESAURITA(ESAURITA instance);
    partial void InsertESEC_ESAME(ESEC_ESAME instance);
    partial void UpdateESEC_ESAME(ESEC_ESAME instance);
    partial void DeleteESEC_ESAME(ESEC_ESAME instance);
    partial void InsertMEDICO(MEDICO instance);
    partial void UpdateMEDICO(MEDICO instance);
    partial void DeleteMEDICO(MEDICO instance);
    partial void InsertPATOLOGIA(PATOLOGIA instance);
    partial void UpdatePATOLOGIA(PATOLOGIA instance);
    partial void DeletePATOLOGIA(PATOLOGIA instance);
    partial void InsertPAZIENTE(PAZIENTE instance);
    partial void UpdatePAZIENTE(PAZIENTE instance);
    partial void DeletePAZIENTE(PAZIENTE instance);
    partial void InsertPRESCRIZIONE(PRESCRIZIONE instance);
    partial void UpdatePRESCRIZIONE(PRESCRIZIONE instance);
    partial void DeletePRESCRIZIONE(PRESCRIZIONE instance);
    partial void InsertQUANTITA(QUANTITA instance);
    partial void UpdateQUANTITA(QUANTITA instance);
    partial void DeleteQUANTITA(QUANTITA instance);
    partial void InsertRIFORNIMENTO(RIFORNIMENTO instance);
    partial void UpdateRIFORNIMENTO(RIFORNIMENTO instance);
    partial void DeleteRIFORNIMENTO(RIFORNIMENTO instance);
    partial void InsertSCHEDA_CLINICA(SCHEDA_CLINICA instance);
    partial void UpdateSCHEDA_CLINICA(SCHEDA_CLINICA instance);
    partial void DeleteSCHEDA_CLINICA(SCHEDA_CLINICA instance);
    partial void InsertTERAPIA(TERAPIA instance);
    partial void UpdateTERAPIA(TERAPIA instance);
    partial void DeleteTERAPIA(TERAPIA instance);
    partial void InsertTRATTAMENTO(TRATTAMENTO instance);
    partial void UpdateTRATTAMENTO(TRATTAMENTO instance);
    partial void DeleteTRATTAMENTO(TRATTAMENTO instance);
    #endregion
		
		public DataClassesDBDataContext() : 
				base(global::TeethKeeper.Properties.Settings.Default.DataBaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FARMACO> FARMACO
		{
			get
			{
				return this.GetTable<FARMACO>();
			}
		}
		
		public System.Data.Linq.Table<AFFIL_SEPARAZ> AFFIL_SEPARAZ
		{
			get
			{
				return this.GetTable<AFFIL_SEPARAZ>();
			}
		}
		
		public System.Data.Linq.Table<APPUNTAMENTO> APPUNTAMENTO
		{
			get
			{
				return this.GetTable<APPUNTAMENTO>();
			}
		}
		
		public System.Data.Linq.Table<ASSUNZIONE_FARMACO> ASSUNZIONE_FARMACO
		{
			get
			{
				return this.GetTable<ASSUNZIONE_FARMACO>();
			}
		}
		
		public System.Data.Linq.Table<ATTREZZATURA> ATTREZZATURA
		{
			get
			{
				return this.GetTable<ATTREZZATURA>();
			}
		}
		
		public System.Data.Linq.Table<ESAME> ESAME
		{
			get
			{
				return this.GetTable<ESAME>();
			}
		}
		
		public System.Data.Linq.Table<ESAURITA> ESAURITA
		{
			get
			{
				return this.GetTable<ESAURITA>();
			}
		}
		
		public System.Data.Linq.Table<ESEC_ESAME> ESEC_ESAME
		{
			get
			{
				return this.GetTable<ESEC_ESAME>();
			}
		}
		
		public System.Data.Linq.Table<MEDICO> MEDICO
		{
			get
			{
				return this.GetTable<MEDICO>();
			}
		}
		
		public System.Data.Linq.Table<PATOLOGIA> PATOLOGIA
		{
			get
			{
				return this.GetTable<PATOLOGIA>();
			}
		}
		
		public System.Data.Linq.Table<PAZIENTE> PAZIENTE
		{
			get
			{
				return this.GetTable<PAZIENTE>();
			}
		}
		
		public System.Data.Linq.Table<PRESCRIZIONE> PRESCRIZIONE
		{
			get
			{
				return this.GetTable<PRESCRIZIONE>();
			}
		}
		
		public System.Data.Linq.Table<QUANTITA> QUANTITA
		{
			get
			{
				return this.GetTable<QUANTITA>();
			}
		}
		
		public System.Data.Linq.Table<RIFORNIMENTO> RIFORNIMENTO
		{
			get
			{
				return this.GetTable<RIFORNIMENTO>();
			}
		}
		
		public System.Data.Linq.Table<SCHEDA_CLINICA> SCHEDA_CLINICA
		{
			get
			{
				return this.GetTable<SCHEDA_CLINICA>();
			}
		}
		
		public System.Data.Linq.Table<TERAPIA> TERAPIA
		{
			get
			{
				return this.GetTable<TERAPIA>();
			}
		}
		
		public System.Data.Linq.Table<TRATTAMENTO> TRATTAMENTO
		{
			get
			{
				return this.GetTable<TRATTAMENTO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FARMACO")]
	public partial class FARMACO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodFarmaco;
		
		private string _Nome;
		
		private string _Effetti_Collaterali;
		
		private EntityRef<ASSUNZIONE_FARMACO> _ASSUNZIONE_FARMACO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodFarmacoChanging(int value);
    partial void OnCodFarmacoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEffetti_CollateraliChanging(string value);
    partial void OnEffetti_CollateraliChanged();
    #endregion
		
		public FARMACO()
		{
			this._ASSUNZIONE_FARMACO = default(EntityRef<ASSUNZIONE_FARMACO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodFarmaco", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodFarmaco
		{
			get
			{
				return this._CodFarmaco;
			}
			set
			{
				if ((this._CodFarmaco != value))
				{
					if (this._ASSUNZIONE_FARMACO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodFarmacoChanging(value);
					this.SendPropertyChanging();
					this._CodFarmaco = value;
					this.SendPropertyChanged("CodFarmaco");
					this.OnCodFarmacoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Effetti_Collaterali", DbType="VarChar(200)")]
		public string Effetti_Collaterali
		{
			get
			{
				return this._Effetti_Collaterali;
			}
			set
			{
				if ((this._Effetti_Collaterali != value))
				{
					this.OnEffetti_CollateraliChanging(value);
					this.SendPropertyChanging();
					this._Effetti_Collaterali = value;
					this.SendPropertyChanged("Effetti_Collaterali");
					this.OnEffetti_CollateraliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASSUNZIONE_FARMACO_FARMACO", Storage="_ASSUNZIONE_FARMACO", ThisKey="CodFarmaco", OtherKey="CodFarmaco", IsForeignKey=true)]
		public ASSUNZIONE_FARMACO ASSUNZIONE_FARMACO
		{
			get
			{
				return this._ASSUNZIONE_FARMACO.Entity;
			}
			set
			{
				ASSUNZIONE_FARMACO previousValue = this._ASSUNZIONE_FARMACO.Entity;
				if (((previousValue != value) 
							|| (this._ASSUNZIONE_FARMACO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ASSUNZIONE_FARMACO.Entity = null;
						previousValue.FARMACO.Remove(this);
					}
					this._ASSUNZIONE_FARMACO.Entity = value;
					if ((value != null))
					{
						value.FARMACO.Add(this);
						this._CodFarmaco = value.CodFarmaco;
					}
					else
					{
						this._CodFarmaco = default(int);
					}
					this.SendPropertyChanged("ASSUNZIONE_FARMACO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AFFIL_SEPARAZ")]
	public partial class AFFIL_SEPARAZ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPaziente;
		
		private string _CodMedico;
		
		private System.DateTime _Data_;
		
		private char _A_S;
		
		private EntitySet<PAZIENTE> _PAZIENTE;
		
		private EntityRef<MEDICO> _MEDICO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPazienteChanging(string value);
    partial void OnCodPazienteChanged();
    partial void OnCodMedicoChanging(string value);
    partial void OnCodMedicoChanged();
    partial void OnData_Changing(System.DateTime value);
    partial void OnData_Changed();
    partial void OnA_SChanging(char value);
    partial void OnA_SChanged();
    #endregion
		
		public AFFIL_SEPARAZ()
		{
			this._PAZIENTE = new EntitySet<PAZIENTE>(new Action<PAZIENTE>(this.attach_PAZIENTE), new Action<PAZIENTE>(this.detach_PAZIENTE));
			this._MEDICO = default(EntityRef<MEDICO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPaziente", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPaziente
		{
			get
			{
				return this._CodPaziente;
			}
			set
			{
				if ((this._CodPaziente != value))
				{
					this.OnCodPazienteChanging(value);
					this.SendPropertyChanging();
					this._CodPaziente = value;
					this.SendPropertyChanged("CodPaziente");
					this.OnCodPazienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodMedico", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodMedico
		{
			get
			{
				return this._CodMedico;
			}
			set
			{
				if ((this._CodMedico != value))
				{
					if (this._MEDICO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodMedicoChanging(value);
					this.SendPropertyChanging();
					this._CodMedico = value;
					this.SendPropertyChanged("CodMedico");
					this.OnCodMedicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_
		{
			get
			{
				return this._Data_;
			}
			set
			{
				if ((this._Data_ != value))
				{
					this.OnData_Changing(value);
					this.SendPropertyChanging();
					this._Data_ = value;
					this.SendPropertyChanged("Data_");
					this.OnData_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_S", DbType="Char(1) NOT NULL")]
		public char A_S
		{
			get
			{
				return this._A_S;
			}
			set
			{
				if ((this._A_S != value))
				{
					this.OnA_SChanging(value);
					this.SendPropertyChanging();
					this._A_S = value;
					this.SendPropertyChanged("A_S");
					this.OnA_SChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AFFIL_SEPARAZ_PAZIENTE", Storage="_PAZIENTE", ThisKey="CodPaziente", OtherKey="CodFiscale")]
		public EntitySet<PAZIENTE> PAZIENTE
		{
			get
			{
				return this._PAZIENTE;
			}
			set
			{
				this._PAZIENTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICO_AFFIL_SEPARAZ", Storage="_MEDICO", ThisKey="CodMedico", OtherKey="Cod_Fiscale", IsForeignKey=true)]
		public MEDICO MEDICO
		{
			get
			{
				return this._MEDICO.Entity;
			}
			set
			{
				MEDICO previousValue = this._MEDICO.Entity;
				if (((previousValue != value) 
							|| (this._MEDICO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDICO.Entity = null;
						previousValue.AFFIL_SEPARAZ.Remove(this);
					}
					this._MEDICO.Entity = value;
					if ((value != null))
					{
						value.AFFIL_SEPARAZ.Add(this);
						this._CodMedico = value.Cod_Fiscale;
					}
					else
					{
						this._CodMedico = default(string);
					}
					this.SendPropertyChanged("MEDICO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.AFFIL_SEPARAZ = this;
		}
		
		private void detach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.AFFIL_SEPARAZ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APPUNTAMENTO")]
	public partial class APPUNTAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPersona;
		
		private System.DateTime _Data_;
		
		private string _Ora;
		
		private EntitySet<PAZIENTE> _PAZIENTE;
		
		private EntityRef<TRATTAMENTO> _TRATTAMENTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPersonaChanging(string value);
    partial void OnCodPersonaChanged();
    partial void OnData_Changing(System.DateTime value);
    partial void OnData_Changed();
    partial void OnOraChanging(string value);
    partial void OnOraChanged();
    #endregion
		
		public APPUNTAMENTO()
		{
			this._PAZIENTE = new EntitySet<PAZIENTE>(new Action<PAZIENTE>(this.attach_PAZIENTE), new Action<PAZIENTE>(this.detach_PAZIENTE));
			this._TRATTAMENTO = default(EntityRef<TRATTAMENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPersona", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPersona
		{
			get
			{
				return this._CodPersona;
			}
			set
			{
				if ((this._CodPersona != value))
				{
					this.OnCodPersonaChanging(value);
					this.SendPropertyChanging();
					this._CodPersona = value;
					this.SendPropertyChanged("CodPersona");
					this.OnCodPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_
		{
			get
			{
				return this._Data_;
			}
			set
			{
				if ((this._Data_ != value))
				{
					if (this._TRATTAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_Changing(value);
					this.SendPropertyChanging();
					this._Data_ = value;
					this.SendPropertyChanged("Data_");
					this.OnData_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ora
		{
			get
			{
				return this._Ora;
			}
			set
			{
				if ((this._Ora != value))
				{
					if (this._TRATTAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOraChanging(value);
					this.SendPropertyChanging();
					this._Ora = value;
					this.SendPropertyChanged("Ora");
					this.OnOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APPUNTAMENTO_PAZIENTE", Storage="_PAZIENTE", ThisKey="CodPersona", OtherKey="CodFiscale")]
		public EntitySet<PAZIENTE> PAZIENTE
		{
			get
			{
				return this._PAZIENTE;
			}
			set
			{
				this._PAZIENTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRATTAMENTO_APPUNTAMENTO", Storage="_TRATTAMENTO", ThisKey="Data_,Ora", OtherKey="Data_,Ora", IsForeignKey=true)]
		public TRATTAMENTO TRATTAMENTO
		{
			get
			{
				return this._TRATTAMENTO.Entity;
			}
			set
			{
				TRATTAMENTO previousValue = this._TRATTAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._TRATTAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRATTAMENTO.Entity = null;
						previousValue.APPUNTAMENTO.Remove(this);
					}
					this._TRATTAMENTO.Entity = value;
					if ((value != null))
					{
						value.APPUNTAMENTO.Add(this);
						this._Data_ = value.Data_;
						this._Ora = value.Ora;
					}
					else
					{
						this._Data_ = default(System.DateTime);
						this._Ora = default(string);
					}
					this.SendPropertyChanged("TRATTAMENTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.APPUNTAMENTO = this;
		}
		
		private void detach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.APPUNTAMENTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASSUNZIONE_FARMACO")]
	public partial class ASSUNZIONE_FARMACO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodFarmaco;
		
		private string _CodPaziente;
		
		private System.DateTime _DataPrescrizione;
		
		private System.Nullable<System.DateTime> _DataFineAssunzione;
		
		private EntitySet<FARMACO> _FARMACO;
		
		private EntitySet<PAZIENTE> _PAZIENTE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodFarmacoChanging(int value);
    partial void OnCodFarmacoChanged();
    partial void OnCodPazienteChanging(string value);
    partial void OnCodPazienteChanged();
    partial void OnDataPrescrizioneChanging(System.DateTime value);
    partial void OnDataPrescrizioneChanged();
    partial void OnDataFineAssunzioneChanging(System.Nullable<System.DateTime> value);
    partial void OnDataFineAssunzioneChanged();
    #endregion
		
		public ASSUNZIONE_FARMACO()
		{
			this._FARMACO = new EntitySet<FARMACO>(new Action<FARMACO>(this.attach_FARMACO), new Action<FARMACO>(this.detach_FARMACO));
			this._PAZIENTE = new EntitySet<PAZIENTE>(new Action<PAZIENTE>(this.attach_PAZIENTE), new Action<PAZIENTE>(this.detach_PAZIENTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodFarmaco", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodFarmaco
		{
			get
			{
				return this._CodFarmaco;
			}
			set
			{
				if ((this._CodFarmaco != value))
				{
					this.OnCodFarmacoChanging(value);
					this.SendPropertyChanging();
					this._CodFarmaco = value;
					this.SendPropertyChanged("CodFarmaco");
					this.OnCodFarmacoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPaziente", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPaziente
		{
			get
			{
				return this._CodPaziente;
			}
			set
			{
				if ((this._CodPaziente != value))
				{
					this.OnCodPazienteChanging(value);
					this.SendPropertyChanging();
					this._CodPaziente = value;
					this.SendPropertyChanged("CodPaziente");
					this.OnCodPazienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPrescrizione", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataPrescrizione
		{
			get
			{
				return this._DataPrescrizione;
			}
			set
			{
				if ((this._DataPrescrizione != value))
				{
					this.OnDataPrescrizioneChanging(value);
					this.SendPropertyChanging();
					this._DataPrescrizione = value;
					this.SendPropertyChanged("DataPrescrizione");
					this.OnDataPrescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFineAssunzione", DbType="Date")]
		public System.Nullable<System.DateTime> DataFineAssunzione
		{
			get
			{
				return this._DataFineAssunzione;
			}
			set
			{
				if ((this._DataFineAssunzione != value))
				{
					this.OnDataFineAssunzioneChanging(value);
					this.SendPropertyChanging();
					this._DataFineAssunzione = value;
					this.SendPropertyChanged("DataFineAssunzione");
					this.OnDataFineAssunzioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASSUNZIONE_FARMACO_FARMACO", Storage="_FARMACO", ThisKey="CodFarmaco", OtherKey="CodFarmaco")]
		public EntitySet<FARMACO> FARMACO
		{
			get
			{
				return this._FARMACO;
			}
			set
			{
				this._FARMACO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASSUNZIONE_FARMACO_PAZIENTE", Storage="_PAZIENTE", ThisKey="CodPaziente", OtherKey="CodFiscale")]
		public EntitySet<PAZIENTE> PAZIENTE
		{
			get
			{
				return this._PAZIENTE;
			}
			set
			{
				this._PAZIENTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FARMACO(FARMACO entity)
		{
			this.SendPropertyChanging();
			entity.ASSUNZIONE_FARMACO = this;
		}
		
		private void detach_FARMACO(FARMACO entity)
		{
			this.SendPropertyChanging();
			entity.ASSUNZIONE_FARMACO = null;
		}
		
		private void attach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.ASSUNZIONE_FARMACO = this;
		}
		
		private void detach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.ASSUNZIONE_FARMACO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ATTREZZATURA")]
	public partial class ATTREZZATURA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codice;
		
		private string _Nome;
		
		private decimal _Prezzo_Unitario;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceChanging(int value);
    partial void OnCodiceChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnPrezzo_UnitarioChanging(decimal value);
    partial void OnPrezzo_UnitarioChanged();
    #endregion
		
		public ATTREZZATURA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo_Unitario", DbType="Decimal(4,2) NOT NULL")]
		public decimal Prezzo_Unitario
		{
			get
			{
				return this._Prezzo_Unitario;
			}
			set
			{
				if ((this._Prezzo_Unitario != value))
				{
					this.OnPrezzo_UnitarioChanging(value);
					this.SendPropertyChanging();
					this._Prezzo_Unitario = value;
					this.SendPropertyChanged("Prezzo_Unitario");
					this.OnPrezzo_UnitarioChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESAME")]
	public partial class ESAME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodEsame;
		
		private string _Nome;
		
		private EntitySet<ESEC_ESAME> _ESEC_ESAME;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodEsameChanging(int value);
    partial void OnCodEsameChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public ESAME()
		{
			this._ESEC_ESAME = new EntitySet<ESEC_ESAME>(new Action<ESEC_ESAME>(this.attach_ESEC_ESAME), new Action<ESEC_ESAME>(this.detach_ESEC_ESAME));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodEsame", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodEsame
		{
			get
			{
				return this._CodEsame;
			}
			set
			{
				if ((this._CodEsame != value))
				{
					this.OnCodEsameChanging(value);
					this.SendPropertyChanging();
					this._CodEsame = value;
					this.SendPropertyChanged("CodEsame");
					this.OnCodEsameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESAME_ESEC_ESAME", Storage="_ESEC_ESAME", ThisKey="CodEsame", OtherKey="CodEsame")]
		public EntitySet<ESEC_ESAME> ESEC_ESAME
		{
			get
			{
				return this._ESEC_ESAME;
			}
			set
			{
				this._ESEC_ESAME.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ESEC_ESAME(ESEC_ESAME entity)
		{
			this.SendPropertyChanging();
			entity.ESAME = this;
		}
		
		private void detach_ESEC_ESAME(ESEC_ESAME entity)
		{
			this.SendPropertyChanging();
			entity.ESAME = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESAURITA")]
	public partial class ESAURITA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPersona;
		
		private System.DateTime _Data_;
		
		private string _Ora;
		
		private int _CodAttrezzatura;
		
		private int _Quantità;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPersonaChanging(string value);
    partial void OnCodPersonaChanged();
    partial void OnData_Changing(System.DateTime value);
    partial void OnData_Changed();
    partial void OnOraChanging(string value);
    partial void OnOraChanged();
    partial void OnCodAttrezzaturaChanging(int value);
    partial void OnCodAttrezzaturaChanged();
    partial void OnQuantitàChanging(int value);
    partial void OnQuantitàChanged();
    #endregion
		
		public ESAURITA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPersona", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPersona
		{
			get
			{
				return this._CodPersona;
			}
			set
			{
				if ((this._CodPersona != value))
				{
					this.OnCodPersonaChanging(value);
					this.SendPropertyChanging();
					this._CodPersona = value;
					this.SendPropertyChanged("CodPersona");
					this.OnCodPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_
		{
			get
			{
				return this._Data_;
			}
			set
			{
				if ((this._Data_ != value))
				{
					this.OnData_Changing(value);
					this.SendPropertyChanging();
					this._Data_ = value;
					this.SendPropertyChanged("Data_");
					this.OnData_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ora
		{
			get
			{
				return this._Ora;
			}
			set
			{
				if ((this._Ora != value))
				{
					this.OnOraChanging(value);
					this.SendPropertyChanging();
					this._Ora = value;
					this.SendPropertyChanged("Ora");
					this.OnOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodAttrezzatura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodAttrezzatura
		{
			get
			{
				return this._CodAttrezzatura;
			}
			set
			{
				if ((this._CodAttrezzatura != value))
				{
					this.OnCodAttrezzaturaChanging(value);
					this.SendPropertyChanging();
					this._CodAttrezzatura = value;
					this.SendPropertyChanged("CodAttrezzatura");
					this.OnCodAttrezzaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Int NOT NULL")]
		public int Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESEC_ESAME")]
	public partial class ESEC_ESAME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPaziente;
		
		private int _CodEsame;
		
		private System.DateTime _Data_;
		
		private string _Esito;
		
		private EntitySet<PAZIENTE> _PAZIENTE;
		
		private EntityRef<ESAME> _ESAME;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPazienteChanging(string value);
    partial void OnCodPazienteChanged();
    partial void OnCodEsameChanging(int value);
    partial void OnCodEsameChanged();
    partial void OnData_Changing(System.DateTime value);
    partial void OnData_Changed();
    partial void OnEsitoChanging(string value);
    partial void OnEsitoChanged();
    #endregion
		
		public ESEC_ESAME()
		{
			this._PAZIENTE = new EntitySet<PAZIENTE>(new Action<PAZIENTE>(this.attach_PAZIENTE), new Action<PAZIENTE>(this.detach_PAZIENTE));
			this._ESAME = default(EntityRef<ESAME>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPaziente", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPaziente
		{
			get
			{
				return this._CodPaziente;
			}
			set
			{
				if ((this._CodPaziente != value))
				{
					this.OnCodPazienteChanging(value);
					this.SendPropertyChanging();
					this._CodPaziente = value;
					this.SendPropertyChanged("CodPaziente");
					this.OnCodPazienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodEsame", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodEsame
		{
			get
			{
				return this._CodEsame;
			}
			set
			{
				if ((this._CodEsame != value))
				{
					if (this._ESAME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodEsameChanging(value);
					this.SendPropertyChanging();
					this._CodEsame = value;
					this.SendPropertyChanged("CodEsame");
					this.OnCodEsameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_
		{
			get
			{
				return this._Data_;
			}
			set
			{
				if ((this._Data_ != value))
				{
					this.OnData_Changing(value);
					this.SendPropertyChanging();
					this._Data_ = value;
					this.SendPropertyChanged("Data_");
					this.OnData_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esito", DbType="VarChar(500)")]
		public string Esito
		{
			get
			{
				return this._Esito;
			}
			set
			{
				if ((this._Esito != value))
				{
					this.OnEsitoChanging(value);
					this.SendPropertyChanging();
					this._Esito = value;
					this.SendPropertyChanged("Esito");
					this.OnEsitoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESEC_ESAME_PAZIENTE", Storage="_PAZIENTE", ThisKey="CodPaziente", OtherKey="CodFiscale")]
		public EntitySet<PAZIENTE> PAZIENTE
		{
			get
			{
				return this._PAZIENTE;
			}
			set
			{
				this._PAZIENTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESAME_ESEC_ESAME", Storage="_ESAME", ThisKey="CodEsame", OtherKey="CodEsame", IsForeignKey=true)]
		public ESAME ESAME
		{
			get
			{
				return this._ESAME.Entity;
			}
			set
			{
				ESAME previousValue = this._ESAME.Entity;
				if (((previousValue != value) 
							|| (this._ESAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESAME.Entity = null;
						previousValue.ESEC_ESAME.Remove(this);
					}
					this._ESAME.Entity = value;
					if ((value != null))
					{
						value.ESEC_ESAME.Add(this);
						this._CodEsame = value.CodEsame;
					}
					else
					{
						this._CodEsame = default(int);
					}
					this.SendPropertyChanged("ESAME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.ESEC_ESAME = this;
		}
		
		private void detach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.ESEC_ESAME = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEDICO")]
	public partial class MEDICO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _Cod_Fiscale;
		
		private string _Telefono;
		
		private char _Sesso;
		
		private EntitySet<AFFIL_SEPARAZ> _AFFIL_SEPARAZ;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnCod_FiscaleChanging(string value);
    partial void OnCod_FiscaleChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnSessoChanging(char value);
    partial void OnSessoChanged();
    #endregion
		
		public MEDICO()
		{
			this._AFFIL_SEPARAZ = new EntitySet<AFFIL_SEPARAZ>(new Action<AFFIL_SEPARAZ>(this.attach_AFFIL_SEPARAZ), new Action<AFFIL_SEPARAZ>(this.detach_AFFIL_SEPARAZ));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cod_Fiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Cod_Fiscale
		{
			get
			{
				return this._Cod_Fiscale;
			}
			set
			{
				if ((this._Cod_Fiscale != value))
				{
					this.OnCod_FiscaleChanging(value);
					this.SendPropertyChanging();
					this._Cod_Fiscale = value;
					this.SendPropertyChanged("Cod_Fiscale");
					this.OnCod_FiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sesso", DbType="Char(1) NOT NULL")]
		public char Sesso
		{
			get
			{
				return this._Sesso;
			}
			set
			{
				if ((this._Sesso != value))
				{
					this.OnSessoChanging(value);
					this.SendPropertyChanging();
					this._Sesso = value;
					this.SendPropertyChanged("Sesso");
					this.OnSessoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICO_AFFIL_SEPARAZ", Storage="_AFFIL_SEPARAZ", ThisKey="Cod_Fiscale", OtherKey="CodMedico")]
		public EntitySet<AFFIL_SEPARAZ> AFFIL_SEPARAZ
		{
			get
			{
				return this._AFFIL_SEPARAZ;
			}
			set
			{
				this._AFFIL_SEPARAZ.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AFFIL_SEPARAZ(AFFIL_SEPARAZ entity)
		{
			this.SendPropertyChanging();
			entity.MEDICO = this;
		}
		
		private void detach_AFFIL_SEPARAZ(AFFIL_SEPARAZ entity)
		{
			this.SendPropertyChanging();
			entity.MEDICO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PATOLOGIA")]
	public partial class PATOLOGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPaziente;
		
		private string _Nome;
		
		private System.DateTime _DataDiagnosi;
		
		private string _Tipologia;
		
		private string _Descrizione;
		
		private EntitySet<PAZIENTE> _PAZIENTE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPazienteChanging(string value);
    partial void OnCodPazienteChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDataDiagnosiChanging(System.DateTime value);
    partial void OnDataDiagnosiChanged();
    partial void OnTipologiaChanging(string value);
    partial void OnTipologiaChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public PATOLOGIA()
		{
			this._PAZIENTE = new EntitySet<PAZIENTE>(new Action<PAZIENTE>(this.attach_PAZIENTE), new Action<PAZIENTE>(this.detach_PAZIENTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPaziente", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPaziente
		{
			get
			{
				return this._CodPaziente;
			}
			set
			{
				if ((this._CodPaziente != value))
				{
					this.OnCodPazienteChanging(value);
					this.SendPropertyChanging();
					this._CodPaziente = value;
					this.SendPropertyChanged("CodPaziente");
					this.OnCodPazienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataDiagnosi", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataDiagnosi
		{
			get
			{
				return this._DataDiagnosi;
			}
			set
			{
				if ((this._DataDiagnosi != value))
				{
					this.OnDataDiagnosiChanging(value);
					this.SendPropertyChanging();
					this._DataDiagnosi = value;
					this.SendPropertyChanged("DataDiagnosi");
					this.OnDataDiagnosiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipologia", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Tipologia
		{
			get
			{
				return this._Tipologia;
			}
			set
			{
				if ((this._Tipologia != value))
				{
					this.OnTipologiaChanging(value);
					this.SendPropertyChanging();
					this._Tipologia = value;
					this.SendPropertyChanged("Tipologia");
					this.OnTipologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(500)")]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PATOLOGIA_PAZIENTE", Storage="_PAZIENTE", ThisKey="CodPaziente", OtherKey="CodFiscale")]
		public EntitySet<PAZIENTE> PAZIENTE
		{
			get
			{
				return this._PAZIENTE;
			}
			set
			{
				this._PAZIENTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.PATOLOGIA = this;
		}
		
		private void detach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.PATOLOGIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAZIENTE")]
	public partial class PAZIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _CodFiscale;
		
		private string _Telefono;
		
		private System.Nullable<char> _Sesso;
		
		private string _Via;
		
		private string _NumeroCivico;
		
		private string _Città;
		
		private string _CAP;
		
		private string _CittaNascita;
		
		private System.Nullable<System.DateTime> _DataNascita;
		
		private System.Nullable<System.DateTime> _DataMorte;
		
		private EntityRef<AFFIL_SEPARAZ> _AFFIL_SEPARAZ;
		
		private EntityRef<ESEC_ESAME> _ESEC_ESAME;
		
		private EntityRef<ASSUNZIONE_FARMACO> _ASSUNZIONE_FARMACO;
		
		private EntityRef<APPUNTAMENTO> _APPUNTAMENTO;
		
		private EntityRef<TRATTAMENTO> _TRATTAMENTO;
		
		private EntityRef<SCHEDA_CLINICA> _SCHEDA_CLINICA;
		
		private EntityRef<PATOLOGIA> _PATOLOGIA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnCodFiscaleChanging(string value);
    partial void OnCodFiscaleChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnSessoChanging(System.Nullable<char> value);
    partial void OnSessoChanged();
    partial void OnViaChanging(string value);
    partial void OnViaChanged();
    partial void OnNumeroCivicoChanging(string value);
    partial void OnNumeroCivicoChanged();
    partial void OnCittàChanging(string value);
    partial void OnCittàChanged();
    partial void OnCAPChanging(string value);
    partial void OnCAPChanged();
    partial void OnCittaNascitaChanging(string value);
    partial void OnCittaNascitaChanged();
    partial void OnDataNascitaChanging(System.Nullable<System.DateTime> value);
    partial void OnDataNascitaChanged();
    partial void OnDataMorteChanging(System.Nullable<System.DateTime> value);
    partial void OnDataMorteChanged();
    #endregion
		
		public PAZIENTE()
		{
			this._AFFIL_SEPARAZ = default(EntityRef<AFFIL_SEPARAZ>);
			this._ESEC_ESAME = default(EntityRef<ESEC_ESAME>);
			this._ASSUNZIONE_FARMACO = default(EntityRef<ASSUNZIONE_FARMACO>);
			this._APPUNTAMENTO = default(EntityRef<APPUNTAMENTO>);
			this._TRATTAMENTO = default(EntityRef<TRATTAMENTO>);
			this._SCHEDA_CLINICA = default(EntityRef<SCHEDA_CLINICA>);
			this._PATOLOGIA = default(EntityRef<PATOLOGIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(30)")]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodFiscale
		{
			get
			{
				return this._CodFiscale;
			}
			set
			{
				if ((this._CodFiscale != value))
				{
					if (((((((this._AFFIL_SEPARAZ.HasLoadedOrAssignedValue || this._ESEC_ESAME.HasLoadedOrAssignedValue) 
								|| this._ASSUNZIONE_FARMACO.HasLoadedOrAssignedValue) 
								|| this._APPUNTAMENTO.HasLoadedOrAssignedValue) 
								|| this._TRATTAMENTO.HasLoadedOrAssignedValue) 
								|| this._SCHEDA_CLINICA.HasLoadedOrAssignedValue) 
								|| this._PATOLOGIA.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodFiscale = value;
					this.SendPropertyChanged("CodFiscale");
					this.OnCodFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(12)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sesso", DbType="Char(1)")]
		public System.Nullable<char> Sesso
		{
			get
			{
				return this._Sesso;
			}
			set
			{
				if ((this._Sesso != value))
				{
					this.OnSessoChanging(value);
					this.SendPropertyChanging();
					this._Sesso = value;
					this.SendPropertyChanged("Sesso");
					this.OnSessoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Via", DbType="VarChar(50)")]
		public string Via
		{
			get
			{
				return this._Via;
			}
			set
			{
				if ((this._Via != value))
				{
					this.OnViaChanging(value);
					this.SendPropertyChanging();
					this._Via = value;
					this.SendPropertyChanged("Via");
					this.OnViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroCivico", DbType="VarChar(4)")]
		public string NumeroCivico
		{
			get
			{
				return this._NumeroCivico;
			}
			set
			{
				if ((this._NumeroCivico != value))
				{
					this.OnNumeroCivicoChanging(value);
					this.SendPropertyChanging();
					this._NumeroCivico = value;
					this.SendPropertyChanged("NumeroCivico");
					this.OnNumeroCivicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Città", DbType="VarChar(30)")]
		public string Città
		{
			get
			{
				return this._Città;
			}
			set
			{
				if ((this._Città != value))
				{
					this.OnCittàChanging(value);
					this.SendPropertyChanging();
					this._Città = value;
					this.SendPropertyChanged("Città");
					this.OnCittàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP", DbType="VarChar(5)")]
		public string CAP
		{
			get
			{
				return this._CAP;
			}
			set
			{
				if ((this._CAP != value))
				{
					this.OnCAPChanging(value);
					this.SendPropertyChanging();
					this._CAP = value;
					this.SendPropertyChanged("CAP");
					this.OnCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CittaNascita", DbType="VarChar(20)")]
		public string CittaNascita
		{
			get
			{
				return this._CittaNascita;
			}
			set
			{
				if ((this._CittaNascita != value))
				{
					this.OnCittaNascitaChanging(value);
					this.SendPropertyChanging();
					this._CittaNascita = value;
					this.SendPropertyChanged("CittaNascita");
					this.OnCittaNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNascita", DbType="Date")]
		public System.Nullable<System.DateTime> DataNascita
		{
			get
			{
				return this._DataNascita;
			}
			set
			{
				if ((this._DataNascita != value))
				{
					this.OnDataNascitaChanging(value);
					this.SendPropertyChanging();
					this._DataNascita = value;
					this.SendPropertyChanged("DataNascita");
					this.OnDataNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataMorte", DbType="Date")]
		public System.Nullable<System.DateTime> DataMorte
		{
			get
			{
				return this._DataMorte;
			}
			set
			{
				if ((this._DataMorte != value))
				{
					this.OnDataMorteChanging(value);
					this.SendPropertyChanging();
					this._DataMorte = value;
					this.SendPropertyChanged("DataMorte");
					this.OnDataMorteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AFFIL_SEPARAZ_PAZIENTE", Storage="_AFFIL_SEPARAZ", ThisKey="CodFiscale", OtherKey="CodPaziente", IsForeignKey=true)]
		public AFFIL_SEPARAZ AFFIL_SEPARAZ
		{
			get
			{
				return this._AFFIL_SEPARAZ.Entity;
			}
			set
			{
				AFFIL_SEPARAZ previousValue = this._AFFIL_SEPARAZ.Entity;
				if (((previousValue != value) 
							|| (this._AFFIL_SEPARAZ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AFFIL_SEPARAZ.Entity = null;
						previousValue.PAZIENTE.Remove(this);
					}
					this._AFFIL_SEPARAZ.Entity = value;
					if ((value != null))
					{
						value.PAZIENTE.Add(this);
						this._CodFiscale = value.CodPaziente;
					}
					else
					{
						this._CodFiscale = default(string);
					}
					this.SendPropertyChanged("AFFIL_SEPARAZ");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESEC_ESAME_PAZIENTE", Storage="_ESEC_ESAME", ThisKey="CodFiscale", OtherKey="CodPaziente", IsForeignKey=true)]
		public ESEC_ESAME ESEC_ESAME
		{
			get
			{
				return this._ESEC_ESAME.Entity;
			}
			set
			{
				ESEC_ESAME previousValue = this._ESEC_ESAME.Entity;
				if (((previousValue != value) 
							|| (this._ESEC_ESAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESEC_ESAME.Entity = null;
						previousValue.PAZIENTE.Remove(this);
					}
					this._ESEC_ESAME.Entity = value;
					if ((value != null))
					{
						value.PAZIENTE.Add(this);
						this._CodFiscale = value.CodPaziente;
					}
					else
					{
						this._CodFiscale = default(string);
					}
					this.SendPropertyChanged("ESEC_ESAME");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASSUNZIONE_FARMACO_PAZIENTE", Storage="_ASSUNZIONE_FARMACO", ThisKey="CodFiscale", OtherKey="CodPaziente", IsForeignKey=true)]
		public ASSUNZIONE_FARMACO ASSUNZIONE_FARMACO
		{
			get
			{
				return this._ASSUNZIONE_FARMACO.Entity;
			}
			set
			{
				ASSUNZIONE_FARMACO previousValue = this._ASSUNZIONE_FARMACO.Entity;
				if (((previousValue != value) 
							|| (this._ASSUNZIONE_FARMACO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ASSUNZIONE_FARMACO.Entity = null;
						previousValue.PAZIENTE.Remove(this);
					}
					this._ASSUNZIONE_FARMACO.Entity = value;
					if ((value != null))
					{
						value.PAZIENTE.Add(this);
						this._CodFiscale = value.CodPaziente;
					}
					else
					{
						this._CodFiscale = default(string);
					}
					this.SendPropertyChanged("ASSUNZIONE_FARMACO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APPUNTAMENTO_PAZIENTE", Storage="_APPUNTAMENTO", ThisKey="CodFiscale", OtherKey="CodPersona", IsForeignKey=true)]
		public APPUNTAMENTO APPUNTAMENTO
		{
			get
			{
				return this._APPUNTAMENTO.Entity;
			}
			set
			{
				APPUNTAMENTO previousValue = this._APPUNTAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._APPUNTAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._APPUNTAMENTO.Entity = null;
						previousValue.PAZIENTE.Remove(this);
					}
					this._APPUNTAMENTO.Entity = value;
					if ((value != null))
					{
						value.PAZIENTE.Add(this);
						this._CodFiscale = value.CodPersona;
					}
					else
					{
						this._CodFiscale = default(string);
					}
					this.SendPropertyChanged("APPUNTAMENTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRATTAMENTO_PAZIENTE", Storage="_TRATTAMENTO", ThisKey="CodFiscale", OtherKey="CodPersona", IsForeignKey=true)]
		public TRATTAMENTO TRATTAMENTO
		{
			get
			{
				return this._TRATTAMENTO.Entity;
			}
			set
			{
				TRATTAMENTO previousValue = this._TRATTAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._TRATTAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRATTAMENTO.Entity = null;
						previousValue.PAZIENTE.Remove(this);
					}
					this._TRATTAMENTO.Entity = value;
					if ((value != null))
					{
						value.PAZIENTE.Add(this);
						this._CodFiscale = value.CodPersona;
					}
					else
					{
						this._CodFiscale = default(string);
					}
					this.SendPropertyChanged("TRATTAMENTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHEDA_CLINICA_PAZIENTE", Storage="_SCHEDA_CLINICA", ThisKey="CodFiscale", OtherKey="CodPaziente", IsForeignKey=true)]
		public SCHEDA_CLINICA SCHEDA_CLINICA
		{
			get
			{
				return this._SCHEDA_CLINICA.Entity;
			}
			set
			{
				SCHEDA_CLINICA previousValue = this._SCHEDA_CLINICA.Entity;
				if (((previousValue != value) 
							|| (this._SCHEDA_CLINICA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCHEDA_CLINICA.Entity = null;
						previousValue.PAZIENTE.Remove(this);
					}
					this._SCHEDA_CLINICA.Entity = value;
					if ((value != null))
					{
						value.PAZIENTE.Add(this);
						this._CodFiscale = value.CodPaziente;
					}
					else
					{
						this._CodFiscale = default(string);
					}
					this.SendPropertyChanged("SCHEDA_CLINICA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PATOLOGIA_PAZIENTE", Storage="_PATOLOGIA", ThisKey="CodFiscale", OtherKey="CodPaziente", IsForeignKey=true)]
		public PATOLOGIA PATOLOGIA
		{
			get
			{
				return this._PATOLOGIA.Entity;
			}
			set
			{
				PATOLOGIA previousValue = this._PATOLOGIA.Entity;
				if (((previousValue != value) 
							|| (this._PATOLOGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PATOLOGIA.Entity = null;
						previousValue.PAZIENTE.Remove(this);
					}
					this._PATOLOGIA.Entity = value;
					if ((value != null))
					{
						value.PAZIENTE.Add(this);
						this._CodFiscale = value.CodPaziente;
					}
					else
					{
						this._CodFiscale = default(string);
					}
					this.SendPropertyChanged("PATOLOGIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRESCRIZIONE")]
	public partial class PRESCRIZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPersona;
		
		private System.DateTime _Data_;
		
		private string _Ora;
		
		private int _CodTerapia;
		
		private int _Durata;
		
		private System.Nullable<int> _NumeroSomministrazioni;
		
		private System.Nullable<decimal> _DoseSomministrazione;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPersonaChanging(string value);
    partial void OnCodPersonaChanged();
    partial void OnData_Changing(System.DateTime value);
    partial void OnData_Changed();
    partial void OnOraChanging(string value);
    partial void OnOraChanged();
    partial void OnCodTerapiaChanging(int value);
    partial void OnCodTerapiaChanged();
    partial void OnDurataChanging(int value);
    partial void OnDurataChanged();
    partial void OnNumeroSomministrazioniChanging(System.Nullable<int> value);
    partial void OnNumeroSomministrazioniChanged();
    partial void OnDoseSomministrazioneChanging(System.Nullable<decimal> value);
    partial void OnDoseSomministrazioneChanged();
    #endregion
		
		public PRESCRIZIONE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPersona", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPersona
		{
			get
			{
				return this._CodPersona;
			}
			set
			{
				if ((this._CodPersona != value))
				{
					this.OnCodPersonaChanging(value);
					this.SendPropertyChanging();
					this._CodPersona = value;
					this.SendPropertyChanged("CodPersona");
					this.OnCodPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_
		{
			get
			{
				return this._Data_;
			}
			set
			{
				if ((this._Data_ != value))
				{
					this.OnData_Changing(value);
					this.SendPropertyChanging();
					this._Data_ = value;
					this.SendPropertyChanged("Data_");
					this.OnData_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ora
		{
			get
			{
				return this._Ora;
			}
			set
			{
				if ((this._Ora != value))
				{
					this.OnOraChanging(value);
					this.SendPropertyChanging();
					this._Ora = value;
					this.SendPropertyChanged("Ora");
					this.OnOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTerapia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodTerapia
		{
			get
			{
				return this._CodTerapia;
			}
			set
			{
				if ((this._CodTerapia != value))
				{
					this.OnCodTerapiaChanging(value);
					this.SendPropertyChanging();
					this._CodTerapia = value;
					this.SendPropertyChanged("CodTerapia");
					this.OnCodTerapiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durata", DbType="Int NOT NULL")]
		public int Durata
		{
			get
			{
				return this._Durata;
			}
			set
			{
				if ((this._Durata != value))
				{
					this.OnDurataChanging(value);
					this.SendPropertyChanging();
					this._Durata = value;
					this.SendPropertyChanged("Durata");
					this.OnDurataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroSomministrazioni", DbType="Int")]
		public System.Nullable<int> NumeroSomministrazioni
		{
			get
			{
				return this._NumeroSomministrazioni;
			}
			set
			{
				if ((this._NumeroSomministrazioni != value))
				{
					this.OnNumeroSomministrazioniChanging(value);
					this.SendPropertyChanging();
					this._NumeroSomministrazioni = value;
					this.SendPropertyChanged("NumeroSomministrazioni");
					this.OnNumeroSomministrazioniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoseSomministrazione", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> DoseSomministrazione
		{
			get
			{
				return this._DoseSomministrazione;
			}
			set
			{
				if ((this._DoseSomministrazione != value))
				{
					this.OnDoseSomministrazioneChanging(value);
					this.SendPropertyChanging();
					this._DoseSomministrazione = value;
					this.SendPropertyChanged("DoseSomministrazione");
					this.OnDoseSomministrazioneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUANTITA")]
	public partial class QUANTITA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodAttrezzatura;
		
		private int _NumeroElementi;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodAttrezzaturaChanging(int value);
    partial void OnCodAttrezzaturaChanged();
    partial void OnNumeroElementiChanging(int value);
    partial void OnNumeroElementiChanged();
    #endregion
		
		public QUANTITA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodAttrezzatura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodAttrezzatura
		{
			get
			{
				return this._CodAttrezzatura;
			}
			set
			{
				if ((this._CodAttrezzatura != value))
				{
					this.OnCodAttrezzaturaChanging(value);
					this.SendPropertyChanging();
					this._CodAttrezzatura = value;
					this.SendPropertyChanged("CodAttrezzatura");
					this.OnCodAttrezzaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroElementi", DbType="Int NOT NULL")]
		public int NumeroElementi
		{
			get
			{
				return this._NumeroElementi;
			}
			set
			{
				if ((this._NumeroElementi != value))
				{
					this.OnNumeroElementiChanging(value);
					this.SendPropertyChanging();
					this._NumeroElementi = value;
					this.SendPropertyChanged("NumeroElementi");
					this.OnNumeroElementiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RIFORNIMENTO")]
	public partial class RIFORNIMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodAttrezzatura;
		
		private int _Quantità;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodAttrezzaturaChanging(int value);
    partial void OnCodAttrezzaturaChanged();
    partial void OnQuantitàChanging(int value);
    partial void OnQuantitàChanged();
    #endregion
		
		public RIFORNIMENTO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodAttrezzatura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodAttrezzatura
		{
			get
			{
				return this._CodAttrezzatura;
			}
			set
			{
				if ((this._CodAttrezzatura != value))
				{
					this.OnCodAttrezzaturaChanging(value);
					this.SendPropertyChanging();
					this._CodAttrezzatura = value;
					this.SendPropertyChanged("CodAttrezzatura");
					this.OnCodAttrezzaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Int NOT NULL")]
		public int Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCHEDA_CLINICA")]
	public partial class SCHEDA_CLINICA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPaziente;
		
		private char _Fumatore;
		
		private string _Sport;
		
		private string _Alcol;
		
		private EntitySet<PAZIENTE> _PAZIENTE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPazienteChanging(string value);
    partial void OnCodPazienteChanged();
    partial void OnFumatoreChanging(char value);
    partial void OnFumatoreChanged();
    partial void OnSportChanging(string value);
    partial void OnSportChanged();
    partial void OnAlcolChanging(string value);
    partial void OnAlcolChanged();
    #endregion
		
		public SCHEDA_CLINICA()
		{
			this._PAZIENTE = new EntitySet<PAZIENTE>(new Action<PAZIENTE>(this.attach_PAZIENTE), new Action<PAZIENTE>(this.detach_PAZIENTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPaziente", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPaziente
		{
			get
			{
				return this._CodPaziente;
			}
			set
			{
				if ((this._CodPaziente != value))
				{
					this.OnCodPazienteChanging(value);
					this.SendPropertyChanging();
					this._CodPaziente = value;
					this.SendPropertyChanged("CodPaziente");
					this.OnCodPazienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fumatore", DbType="Char(1) NOT NULL")]
		public char Fumatore
		{
			get
			{
				return this._Fumatore;
			}
			set
			{
				if ((this._Fumatore != value))
				{
					this.OnFumatoreChanging(value);
					this.SendPropertyChanging();
					this._Fumatore = value;
					this.SendPropertyChanged("Fumatore");
					this.OnFumatoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sport", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Sport
		{
			get
			{
				return this._Sport;
			}
			set
			{
				if ((this._Sport != value))
				{
					this.OnSportChanging(value);
					this.SendPropertyChanging();
					this._Sport = value;
					this.SendPropertyChanged("Sport");
					this.OnSportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alcol", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Alcol
		{
			get
			{
				return this._Alcol;
			}
			set
			{
				if ((this._Alcol != value))
				{
					this.OnAlcolChanging(value);
					this.SendPropertyChanging();
					this._Alcol = value;
					this.SendPropertyChanged("Alcol");
					this.OnAlcolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHEDA_CLINICA_PAZIENTE", Storage="_PAZIENTE", ThisKey="CodPaziente", OtherKey="CodFiscale")]
		public EntitySet<PAZIENTE> PAZIENTE
		{
			get
			{
				return this._PAZIENTE;
			}
			set
			{
				this._PAZIENTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.SCHEDA_CLINICA = this;
		}
		
		private void detach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.SCHEDA_CLINICA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TERAPIA")]
	public partial class TERAPIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodTerapia;
		
		private System.Nullable<int> _CodFarmaco;
		
		private System.Nullable<int> _CodEsame;
		
		private string _Nome;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodTerapiaChanging(int value);
    partial void OnCodTerapiaChanged();
    partial void OnCodFarmacoChanging(System.Nullable<int> value);
    partial void OnCodFarmacoChanged();
    partial void OnCodEsameChanging(System.Nullable<int> value);
    partial void OnCodEsameChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public TERAPIA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTerapia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodTerapia
		{
			get
			{
				return this._CodTerapia;
			}
			set
			{
				if ((this._CodTerapia != value))
				{
					this.OnCodTerapiaChanging(value);
					this.SendPropertyChanging();
					this._CodTerapia = value;
					this.SendPropertyChanged("CodTerapia");
					this.OnCodTerapiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodFarmaco", DbType="Int")]
		public System.Nullable<int> CodFarmaco
		{
			get
			{
				return this._CodFarmaco;
			}
			set
			{
				if ((this._CodFarmaco != value))
				{
					this.OnCodFarmacoChanging(value);
					this.SendPropertyChanging();
					this._CodFarmaco = value;
					this.SendPropertyChanged("CodFarmaco");
					this.OnCodFarmacoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodEsame", DbType="Int")]
		public System.Nullable<int> CodEsame
		{
			get
			{
				return this._CodEsame;
			}
			set
			{
				if ((this._CodEsame != value))
				{
					this.OnCodEsameChanging(value);
					this.SendPropertyChanging();
					this._CodEsame = value;
					this.SendPropertyChanged("CodEsame");
					this.OnCodEsameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRATTAMENTO")]
	public partial class TRATTAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPersona;
		
		private System.DateTime _Data_;
		
		private string _Ora;
		
		private string _Descrizione;
		
		private string _Diagnosi;
		
		private string _Tipologia;
		
		private EntitySet<APPUNTAMENTO> _APPUNTAMENTO;
		
		private EntitySet<PAZIENTE> _PAZIENTE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPersonaChanging(string value);
    partial void OnCodPersonaChanged();
    partial void OnData_Changing(System.DateTime value);
    partial void OnData_Changed();
    partial void OnOraChanging(string value);
    partial void OnOraChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnDiagnosiChanging(string value);
    partial void OnDiagnosiChanged();
    partial void OnTipologiaChanging(string value);
    partial void OnTipologiaChanged();
    #endregion
		
		public TRATTAMENTO()
		{
			this._APPUNTAMENTO = new EntitySet<APPUNTAMENTO>(new Action<APPUNTAMENTO>(this.attach_APPUNTAMENTO), new Action<APPUNTAMENTO>(this.detach_APPUNTAMENTO));
			this._PAZIENTE = new EntitySet<PAZIENTE>(new Action<PAZIENTE>(this.attach_PAZIENTE), new Action<PAZIENTE>(this.detach_PAZIENTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPersona", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPersona
		{
			get
			{
				return this._CodPersona;
			}
			set
			{
				if ((this._CodPersona != value))
				{
					this.OnCodPersonaChanging(value);
					this.SendPropertyChanging();
					this._CodPersona = value;
					this.SendPropertyChanged("CodPersona");
					this.OnCodPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_
		{
			get
			{
				return this._Data_;
			}
			set
			{
				if ((this._Data_ != value))
				{
					this.OnData_Changing(value);
					this.SendPropertyChanging();
					this._Data_ = value;
					this.SendPropertyChanged("Data_");
					this.OnData_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ora
		{
			get
			{
				return this._Ora;
			}
			set
			{
				if ((this._Ora != value))
				{
					this.OnOraChanging(value);
					this.SendPropertyChanging();
					this._Ora = value;
					this.SendPropertyChanged("Ora");
					this.OnOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagnosi", DbType="VarChar(500)")]
		public string Diagnosi
		{
			get
			{
				return this._Diagnosi;
			}
			set
			{
				if ((this._Diagnosi != value))
				{
					this.OnDiagnosiChanging(value);
					this.SendPropertyChanging();
					this._Diagnosi = value;
					this.SendPropertyChanged("Diagnosi");
					this.OnDiagnosiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipologia", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Tipologia
		{
			get
			{
				return this._Tipologia;
			}
			set
			{
				if ((this._Tipologia != value))
				{
					this.OnTipologiaChanging(value);
					this.SendPropertyChanging();
					this._Tipologia = value;
					this.SendPropertyChanged("Tipologia");
					this.OnTipologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRATTAMENTO_APPUNTAMENTO", Storage="_APPUNTAMENTO", ThisKey="Data_,Ora", OtherKey="Data_,Ora")]
		public EntitySet<APPUNTAMENTO> APPUNTAMENTO
		{
			get
			{
				return this._APPUNTAMENTO;
			}
			set
			{
				this._APPUNTAMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRATTAMENTO_PAZIENTE", Storage="_PAZIENTE", ThisKey="CodPersona", OtherKey="CodFiscale")]
		public EntitySet<PAZIENTE> PAZIENTE
		{
			get
			{
				return this._PAZIENTE;
			}
			set
			{
				this._PAZIENTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_APPUNTAMENTO(APPUNTAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.TRATTAMENTO = this;
		}
		
		private void detach_APPUNTAMENTO(APPUNTAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.TRATTAMENTO = null;
		}
		
		private void attach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.TRATTAMENTO = this;
		}
		
		private void detach_PAZIENTE(PAZIENTE entity)
		{
			this.SendPropertyChanging();
			entity.TRATTAMENTO = null;
		}
	}
}
#pragma warning restore 1591
